{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createDrawerNavigator, DrawerItemList, DrawerContentScrollView } from \"@react-navigation/drawer\";\nimport User from \"./assets/user.jpg\";\nimport Categoria from \"./screens/Inventario/Categoria\";\nimport Producto from \"./screens/Inventario/Producto\";\nimport Inventario from \"./screens/Inventario/Inventario\";\nimport InventarioHabitacion from \"./screens/Inventario/InventarioHabitacion\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDropdownOpen = _useState2[0],\n    setIsDropdownOpen = _useState2[1];\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Drawer.Navigator, {\n      drawerContent: CustomDrawerContent,\n      children: [_jsx(Drawer.Screen, {\n        name: \"Dashboard\",\n        component: Dashboard,\n        options: {\n          drawerLabel: \"Dashboard\",\n          title: \"Dashboard\",\n          drawerIcon: function drawerIcon(_ref) {\n            var color = _ref.color,\n              size = _ref.size;\n            return _jsx(MaterialIcons, {\n              name: \"dashboard\",\n              size: size,\n              color: color\n            });\n          }\n        }\n      }), _jsx(Drawer.Screen, {\n        name: \"Dropdown\",\n        options: {\n          drawerLabel: \"Dropdown\"\n        },\n        children: function children() {\n          return _jsxs(View, {\n            children: [_jsxs(TouchableOpacity, {\n              onPress: function onPress() {\n                return setIsDropdownOpen(!isDropdownOpen);\n              },\n              style: {\n                flexDirection: \"row\",\n                alignItems: \"center\"\n              },\n              children: [_jsx(MaterialIcons, {\n                name: isDropdownOpen ? \"expand-less\" : \"expand-more\",\n                size: 24,\n                color: \"black\"\n              }), _jsx(Text, {\n                children: \"Dropdown\"\n              })]\n            }), isDropdownOpen && _jsxs(View, {\n              style: {\n                marginLeft: 20\n              },\n              children: [_jsx(Drawer.Screen, {\n                name: \"Categorias\",\n                component: Categoria,\n                options: {\n                  drawerLabel: \"Categorias\",\n                  title: \"Categorias\",\n                  drawerIcon: function drawerIcon(_ref2) {\n                    var color = _ref2.color,\n                      size = _ref2.size;\n                    return _jsx(MaterialIcons, {\n                      name: \"category\",\n                      size: size,\n                      color: color\n                    });\n                  }\n                }\n              }), _jsx(Drawer.Screen, {\n                name: \"Productos\",\n                component: Producto,\n                options: {\n                  drawerLabel: \"Productos\",\n                  title: \"Productos\",\n                  drawerIcon: function drawerIcon(_ref3) {\n                    var color = _ref3.color,\n                      size = _ref3.size;\n                    return _jsx(MaterialIcons, {\n                      name: \"shopping-cart\",\n                      size: size,\n                      color: color\n                    });\n                  }\n                }\n              }), _jsx(Drawer.Screen, {\n                name: \"Inventarios\",\n                component: Inventario,\n                options: {\n                  drawerLabel: \"Inventarios\",\n                  title: \"Inventarios\",\n                  drawerIcon: function drawerIcon(_ref4) {\n                    var color = _ref4.color,\n                      size = _ref4.size;\n                    return _jsx(MaterialIcons, {\n                      name: \"inventory\",\n                      size: size,\n                      color: color\n                    });\n                  }\n                }\n              }), _jsx(Drawer.Screen, {\n                name: \"Inventario Habitacion\",\n                component: InventarioHabitacion,\n                options: {\n                  drawerLabel: \"Inventario Habitacion\",\n                  title: \"Inventario Habitacion\",\n                  drawerIcon: function drawerIcon(_ref5) {\n                    var color = _ref5.color,\n                      size = _ref5.size;\n                    return _jsx(MaterialIcons, {\n                      name: \"single-bed\",\n                      size: size,\n                      color: color\n                    });\n                  }\n                }\n              })]\n            })]\n          });\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  profileContainer: {\n    height: 200,\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderBottomColor: \"#f4f4f4\",\n    borderBottomWidth: 1\n  },\n  profileImage: {\n    height: 130,\n    width: 130,\n    borderRadius: 65\n  },\n  profileName: {\n    fontSize: 22,\n    marginVertical: 6,\n    fontWeight: \"bold\",\n    color: \"#111\"\n  },\n  profileRole: {\n    fontSize: 16,\n    color: \"#111\"\n  }\n});","map":{"version":3,"names":["React","Text","View","Image","MaterialIcons","NavigationContainer","createDrawerNavigator","DrawerItemList","DrawerContentScrollView","User","Categoria","Producto","Inventario","InventarioHabitacion","jsx","_jsx","jsxs","_jsxs","Drawer","App","_useState","useState","_useState2","_slicedToArray","isDropdownOpen","setIsDropdownOpen","children","Navigator","drawerContent","CustomDrawerContent","Screen","name","component","Dashboard","options","drawerLabel","title","drawerIcon","_ref","color","size","TouchableOpacity","onPress","style","flexDirection","alignItems","marginLeft","_ref2","_ref3","_ref4","_ref5","styles","StyleSheet","create","profileContainer","height","width","justifyContent","borderBottomColor","borderBottomWidth","profileImage","borderRadius","profileName","fontSize","marginVertical","fontWeight","profileRole"],"sources":["C:/Users/cano1/Documents/slide-react/sidebar/App.js"],"sourcesContent":["import React from 'react';\r\nimport { Text, View, Image } from 'react-native';\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createDrawerNavigator, DrawerItemList, DrawerContentScrollView } from \"@react-navigation/drawer\";\r\n\r\nimport User from \"./assets/user.jpg\";\r\nimport Categoria from \"./screens/Inventario/Categoria\";\r\nimport Producto from \"./screens/Inventario/Producto\";\r\nimport Inventario from \"./screens/Inventario/Inventario\";\r\nimport InventarioHabitacion from \"./screens/Inventario/InventarioHabitacion\"\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\nexport default function App() {\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n\r\n    return (\r\n        <NavigationContainer>\r\n            <Drawer.Navigator drawerContent={CustomDrawerContent}>\r\n                <Drawer.Screen\r\n                    name=\"Dashboard\"\r\n                    component={Dashboard}\r\n                    options={{\r\n                        drawerLabel: \"Dashboard\",\r\n                        title: \"Dashboard\",\r\n                        drawerIcon: ({ color, size }) => (\r\n                            <MaterialIcons name=\"dashboard\" size={size} color={color} />\r\n                        )\r\n                    }}\r\n                />\r\n                <Drawer.Screen\r\n                    name=\"Dropdown\"\r\n                    options={{ drawerLabel: \"Dropdown\" }}\r\n                >\r\n                    {() => (\r\n                        <View>\r\n                            <TouchableOpacity\r\n                                onPress={() => setIsDropdownOpen(!isDropdownOpen)}\r\n                                style={{\r\n                                    flexDirection: \"row\",\r\n                                    alignItems: \"center\"\r\n                                }}\r\n                            >\r\n                                <MaterialIcons\r\n                                    name={isDropdownOpen ? \"expand-less\" : \"expand-more\"}\r\n                                    size={24}\r\n                                    color=\"black\"\r\n                                />\r\n                                <Text>Dropdown</Text>\r\n                            </TouchableOpacity>\r\n\r\n                            {isDropdownOpen && (\r\n                                <View style={{ marginLeft: 20 }}>\r\n                                    <Drawer.Screen\r\n                                        name=\"Categorias\"\r\n                                        component={Categoria}\r\n                                        options={{\r\n                                            drawerLabel: \"Categorias\",\r\n                                            title: \"Categorias\",\r\n                                            drawerIcon: ({ color, size }) => (\r\n                                                <MaterialIcons name=\"category\" size={size} color={color} />\r\n                                            )\r\n                                        }}\r\n                                    />\r\n                                    <Drawer.Screen\r\n                                        name=\"Productos\"\r\n                                        component={Producto}\r\n                                        options={{\r\n                                            drawerLabel: \"Productos\",\r\n                                            title: \"Productos\",\r\n                                            drawerIcon: ({ color, size }) => (\r\n                                                <MaterialIcons name=\"shopping-cart\" size={size} color={color} />\r\n                                            )\r\n                                        }}\r\n                                    />\r\n                                    <Drawer.Screen\r\n                                        name=\"Inventarios\"\r\n                                        component={Inventario}\r\n                                        options={{\r\n                                            drawerLabel: \"Inventarios\",\r\n                                            title: \"Inventarios\",\r\n                                            drawerIcon: ({ color, size }) => (\r\n                                                <MaterialIcons name=\"inventory\" size={size} color={color} />\r\n                                            )\r\n                                        }}\r\n                                    />\r\n                                    <Drawer.Screen\r\n                                        name=\"Inventario Habitacion\"\r\n                                        component={InventarioHabitacion}\r\n                                        options={{\r\n                                            drawerLabel: \"Inventario Habitacion\",\r\n                                            title: \"Inventario Habitacion\",\r\n                                            drawerIcon: ({ color, size }) => (\r\n                                                <MaterialIcons name=\"single-bed\" size={size} color={color} />\r\n                                            )\r\n                                        }}\r\n                                    />\r\n                                </View>\r\n                            )}\r\n                        </View>\r\n                    )}\r\n                </Drawer.Screen>\r\n            </Drawer.Navigator>\r\n        </NavigationContainer>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    profileContainer: {\r\n        height: 200,\r\n        width: '100%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderBottomColor: \"#f4f4f4\",\r\n        borderBottomWidth: 1,\r\n    },\r\n    profileImage: {\r\n        height: 130,\r\n        width: 130,\r\n        borderRadius: 65,\r\n    },\r\n    profileName: {\r\n        fontSize: 22,\r\n        marginVertical: 6,\r\n        fontWeight: \"bold\",\r\n        color: \"#111\",\r\n    },\r\n    profileRole: {\r\n        fontSize: 16,\r\n        color: \"#111\",\r\n    },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}