{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from 'axios';\nexport var fetchTipoHabitacion = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      var response = yield axios.get('https://hotel-api-hzf6.onrender.com/api/parametrizacion/tipoHabitacion');\n      var tipoHabitacionData = response.data.data.map(function (item) {\n        return {\n          id: item.id,\n          Codigo: item.Codigo,\n          Descripcion: item.Descripcion,\n          Cantidad: item.Cantidad,\n          HabitacionesId: item.HabitacionesId,\n          Estado: item.Estado\n        };\n      });\n      return tipoHabitacionData;\n    } catch (error) {\n      console.error('Error al obtener el tipo de habitación:', error);\n      throw error;\n    }\n  });\n  return function fetchTipoHabitacion() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var agregarNuevoTipoHabitacion = function () {\n  var _ref2 = _asyncToGenerator(function* (nuevotipoHabitacion) {\n    try {\n      var response = yield axios.post('https://hotel-api-hzf6.onrender.com/api/parametrizacion/tipoHabitacion', nuevotipoHabitacion);\n      if (response.status === 201) {\n        return {\n          success: true,\n          message: 'Tipo de habitación creada con éxito'\n        };\n      } else {\n        return {\n          success: false,\n          message: 'Error al actualizar el tipo de habitación'\n        };\n      }\n    } catch (error) {\n      console.error('Error en la solicitud POST:', error);\n      return false;\n    }\n  });\n  return function agregarNuevoTipoHabitacion(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var fetchTipoHabitacionId = function () {\n  var _ref3 = _asyncToGenerator(function* (tipoHabitacionId) {\n    try {\n      var response = yield axios.get(`https://hotel-api-hzf6.onrender.com/api/parametrizacion/tipoHabitacion/${tipoHabitacionId}`);\n      var tipoHabitacionData = response.data.data;\n      return tipoHabitacionData;\n    } catch (error) {\n      console.error('Error al obtener el tipo de habitación por ID:', error);\n      throw error;\n    }\n  });\n  return function fetchTipoHabitacionId(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var actualizarTipoHabitacion = function () {\n  var _ref4 = _asyncToGenerator(function* (id, nuevoTipoHabitacion) {\n    try {\n      var url = `https://hotel-api-hzf6.onrender.com/api/parametrizacion/tipoHabitacion/${id}`;\n      var response = yield axios.put(url, nuevoTipoHabitacion);\n      if (response.status === 200 || response.status === 204) {\n        return {\n          success: true,\n          message: 'Tipo de habitación actualizada con éxito'\n        };\n      } else {\n        return {\n          success: false,\n          message: 'Error al actualizar el tipo de habitación'\n        };\n      }\n    } catch (error) {\n      console.error('Error en la solicitud PUT:', error);\n      return {\n        success: false,\n        message: 'Error en la solicitud PUT'\n      };\n    }\n  });\n  return function actualizarTipoHabitacion(_x3, _x4) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var fetchEliminarTipoHabitacion = function () {\n  var _ref5 = _asyncToGenerator(function* (tipoHabitacionId) {\n    try {\n      var response = yield axios.delete(`https://hotel-api-hzf6.onrender.com/api/parametrizacion/tipoHabitacion/${TipoHabitacion}`);\n      var tipoHabitacionData = response.data.message;\n      return tipoHabitacionData;\n    } catch (error) {\n      console.error('Error al obtener el tipo de habitación por ID:', error);\n      throw error;\n    }\n  });\n  return function fetchEliminarTipoHabitacion(_x5) {\n    return _ref5.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["axios","fetchTipoHabitacion","_ref","_asyncToGenerator","response","get","tipoHabitacionData","data","map","item","id","Codigo","Descripcion","Cantidad","HabitacionesId","Estado","error","console","apply","arguments","agregarNuevoTipoHabitacion","_ref2","nuevotipoHabitacion","post","status","success","message","_x","fetchTipoHabitacionId","_ref3","tipoHabitacionId","_x2","actualizarTipoHabitacion","_ref4","nuevoTipoHabitacion","url","put","_x3","_x4","fetchEliminarTipoHabitacion","_ref5","delete","TipoHabitacion","_x5"],"sources":["C:/Users/user/Documents/PROYECTO/hotel-movil/assets/js/Parametrizacion/tipoHabitacionService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const fetchTipoHabitacion = async () => {\r\n    try {\r\n        const response = await axios.get('https://hotel-api-hzf6.onrender.com/api/parametrizacion/tipoHabitacion');\r\n        const tipoHabitacionData = response.data.data.map(item => ({\r\n            id: item.id,\r\n            Codigo: item.Codigo,\r\n            Descripcion: item.Descripcion,\r\n            Cantidad: item.Cantidad,\r\n            HabitacionesId: item.HabitacionesId,\r\n            Estado: item.Estado,\r\n        }));\r\n        return tipoHabitacionData;\r\n    } catch (error) {\r\n        console.error('Error al obtener el tipo de habitación:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const agregarNuevoTipoHabitacion = async (nuevotipoHabitacion) => {\r\n    try {\r\n        const response = await axios.post('https://hotel-api-hzf6.onrender.com/api/parametrizacion/tipoHabitacion', nuevotipoHabitacion);\r\n\r\n        if (response.status === 201) {\r\n            return { success: true, message: 'Tipo de habitación creada con éxito' };\r\n        } else {\r\n            return { success: false, message: 'Error al actualizar el tipo de habitación' };\r\n        }\r\n    } catch (error) {\r\n        console.error('Error en la solicitud POST:', error);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const fetchTipoHabitacionId = async (tipoHabitacionId) => {\r\n    try {\r\n        const response = await axios.get(`https://hotel-api-hzf6.onrender.com/api/parametrizacion/tipoHabitacion/${tipoHabitacionId}`);\r\n\r\n        const tipoHabitacionData = response.data.data;\r\n\r\n        return tipoHabitacionData;\r\n    } catch (error) {\r\n        console.error('Error al obtener el tipo de habitación por ID:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const actualizarTipoHabitacion = async (id, nuevoTipoHabitacion) => {\r\n    try {\r\n        const url = `https://hotel-api-hzf6.onrender.com/api/parametrizacion/tipoHabitacion/${id}`;\r\n        const response = await axios.put(url, nuevoTipoHabitacion);\r\n\r\n        if (response.status === 200 || response.status === 204) {\r\n            return { success: true, message: 'Tipo de habitación actualizada con éxito' };\r\n        } else {\r\n            return { success: false, message: 'Error al actualizar el tipo de habitación' };\r\n        }\r\n    } catch (error) {\r\n        console.error('Error en la solicitud PUT:', error);\r\n        return { success: false, message: 'Error en la solicitud PUT' };\r\n    }\r\n};\r\n\r\nexport const fetchEliminarTipoHabitacion = async (tipoHabitacionId) => {\r\n    try {\r\n        const response = await axios.delete(`https://hotel-api-hzf6.onrender.com/api/parametrizacion/tipoHabitacion/${TipoHabitacion}`);\r\n\r\n        const tipoHabitacionData = response.data.message;\r\n\r\n        return tipoHabitacionData;\r\n\r\n    } catch (error) {\r\n        console.error('Error al obtener el tipo de habitación por ID:', error);\r\n        throw error;\r\n    }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}