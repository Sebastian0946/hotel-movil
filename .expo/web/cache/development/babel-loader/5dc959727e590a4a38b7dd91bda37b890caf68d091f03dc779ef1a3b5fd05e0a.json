{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { fetchCategorias } from \"../../assets/js/Inventario/Categoria\";\nimport { useNavigation } from '@react-navigation/native';\nimport styles from \"../../assets/css/styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Categorias() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    categorias = _useState2[0],\n    setCategorias = _useState2[1];\n  useEffect(function () {\n    fetchCategoriasData();\n  }, []);\n  var fetchCategoriasData = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var data = yield fetchCategorias();\n        setCategorias(data);\n      } catch (error) {\n        console.error('Error al obtener las categorías:', error);\n      }\n    });\n    return function fetchCategoriasData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var renderHeader = function renderHeader() {\n    return _jsxs(View, {\n      children: [_jsx(TouchableOpacity, {\n        style: styles.addButton,\n        onPress: function onPress() {},\n        children: _jsx(Text, {\n          style: styles.addButtonLabel,\n          children: \"Agregar nueva categor\\xEDa\"\n        })\n      }), _jsxs(View, {\n        style: styles.header,\n        children: [_jsx(Text, {\n          style: styles.headerText,\n          children: \"C\\xF3digo\"\n        }), _jsx(Text, {\n          style: styles.headerText,\n          children: \"Descripci\\xF3n\"\n        }), _jsx(Text, {\n          style: styles.headerText,\n          children: \"Estado\"\n        })]\n      })]\n    });\n  };\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(View, {\n      style: styles.categoryItem,\n      children: [_jsx(Text, {\n        style: styles.categoryText,\n        children: item.Codigo\n      }), _jsx(Text, {\n        style: styles.categoryText,\n        children: item.Descripcion\n      }), _jsx(Text, {\n        style: styles.categoryText,\n        children: item.Estado\n      })]\n    });\n  };\n  var renderFooter = function renderFooter() {\n    return _jsx(View, {\n      style: styles.footer,\n      children: _jsxs(Text, {\n        style: styles.footerText,\n        children: [\"Total: \", categorias.length, \" categor\\xEDas\"]\n      })\n    });\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Categor\\xEDas\"\n    }), _jsx(FlatList, {\n      data: categorias,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: renderItem,\n      ListHeaderComponent: renderHeader,\n      ListFooterComponent: renderFooter,\n      contentContainerStyle: styles.categoryList\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","View","Text","FlatList","fetchCategorias","useNavigation","styles","jsx","_jsx","jsxs","_jsxs","Categorias","_useState","_useState2","_slicedToArray","categorias","setCategorias","fetchCategoriasData","_ref","_asyncToGenerator","data","error","console","apply","arguments","renderHeader","children","TouchableOpacity","style","addButton","onPress","addButtonLabel","header","headerText","renderItem","_ref2","item","categoryItem","categoryText","Codigo","Descripcion","Estado","renderFooter","footer","footerText","length","flex","title","keyExtractor","id","toString","ListHeaderComponent","ListFooterComponent","contentContainerStyle","categoryList"],"sources":["C:/Users/cano1/Documents/slide-react/sidebar/screens/Inventario/Categoria.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, FlatList } from 'react-native';\r\nimport { fetchCategorias } from '../../assets/js/Inventario/Categoria';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport styles from '../../assets/css/styles';\r\n\r\nexport default function Categorias() {\r\n\r\n    const [categorias, setCategorias] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchCategoriasData();\r\n    }, []);\r\n\r\n    const fetchCategoriasData = async () => {\r\n        try {\r\n            const data = await fetchCategorias();\r\n            setCategorias(data);\r\n        } catch (error) {\r\n            console.error('Error al obtener las categorías:', error);\r\n        }\r\n    };\r\n\r\n    const renderHeader = () => (\r\n        <View>\r\n            <TouchableOpacity\r\n                style={styles.addButton}\r\n                onPress={() => {\r\n                    // Aquí puedes agregar la lógica para abrir la pantalla de agregar nueva categoría\r\n                    // Por ejemplo, navegación a una pantalla de formulario\r\n                }}\r\n            >\r\n                <Text style={styles.addButtonLabel}>Agregar nueva categoría</Text>\r\n            </TouchableOpacity>\r\n            <View style={styles.header}>\r\n                <Text style={styles.headerText}>Código</Text>\r\n                <Text style={styles.headerText}>Descripción</Text>\r\n                <Text style={styles.headerText}>Estado</Text>\r\n            </View>\r\n        </View>\r\n    );\r\n\r\n    const renderItem = ({ item }) => (\r\n        <View style={styles.categoryItem}>\r\n            <Text style={styles.categoryText}>{item.Codigo}</Text>\r\n            <Text style={styles.categoryText}>{item.Descripcion}</Text>\r\n            <Text style={styles.categoryText}>{item.Estado}</Text>\r\n        </View>\r\n    );\r\n\r\n    const renderFooter = () => (\r\n        <View style={styles.footer}>\r\n            <Text style={styles.footerText}>Total: {categorias.length} categorías</Text>\r\n        </View>\r\n    );\r\n\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <Text style={styles.title}>Categorías</Text>\r\n            <FlatList\r\n                data={categorias}\r\n                keyExtractor={(item) => item.id.toString()}\r\n                renderItem={renderItem}\r\n                ListHeaderComponent={renderHeader}\r\n                ListFooterComponent={renderFooter}\r\n                contentContainerStyle={styles.categoryList}\r\n            />\r\n        </View>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}